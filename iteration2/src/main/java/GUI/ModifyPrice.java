package GUI;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import service.ManagerService;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class ModifyPrice {
    private JFrame frame;
    private JButton modifyButton;
    private JButton modifyButton1;
    private JButton modifyButton2;
    private JButton modifyButton3;
    private JButton modifyButton4;
    private JButton backButton;
    private JPanel ModifyPricePanel;
    private JLabel modifyPriceLabel;
    private JPanel ModifyDetailPanel;
    private JLabel nameLabel;
    private JLabel priceLabel;
    private JLabel operationLabel;
    private JLabel fixedRamenLabel;
    private JLabel extraNoriLabel;
    private JLabel extraBoiledEggLabel;
    private JLabel bambooShootsLabel;
    private JLabel extraChashuLabel;
    private JLabel RamenPrice;
    private JLabel NoriPrice;
    private JLabel EggPrice;
    private JLabel BambooPrice;
    private JLabel ChashuPrice;

    public ModifyPrice() {
        frame = new JFrame("ModifyPrice");
        frame.setContentPane(ModifyPricePanel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(600, 500);
        frame.setPreferredSize(new Dimension(600, 500));
        frame.setLocationRelativeTo(null);
        frame.pack();
        frame.setVisible(true);

        ManagerService managerService=new ManagerService();
        RamenPrice.setText(String.valueOf(managerService.readPrices("Fixed")));
        BambooPrice.setText(String.valueOf(managerService.readPrices("Shoots")));
        ChashuPrice.setText(String.valueOf(managerService.readPrices("Chashu")));
        EggPrice.setText(String.valueOf(managerService.readPrices("Egg")));
        NoriPrice.setText(String.valueOf(managerService.readPrices("Nori")));

        backButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                frame.dispose();
                ManagementGUI.main(null);
            }
        });
        modifyButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Ramen price
                frame.dispose();
                PriceModification.main("Fixed");
            }
        });
        modifyButton1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                //Nori price
                frame.dispose();
                PriceModification.main("Nori");
            }
        });
        modifyButton2.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                //Egg price
                frame.dispose();
                PriceModification.main("Egg");
            }
        });
        modifyButton3.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                //Bamboo shoot price
                frame.dispose();
                PriceModification.main("Shoots");
            }
        });
        modifyButton4.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                //Chashu price
                frame.dispose();
                PriceModification.main("Chashu");
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        ModifyPricePanel = new JPanel();
        ModifyPricePanel.setLayout(new GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        ModifyPricePanel.setBackground(new Color(-721665));
        modifyPriceLabel = new JLabel();
        Font modifyPriceLabelFont = this.$$$getFont$$$("Helvetica", Font.BOLD, 28, modifyPriceLabel.getFont());
        if (modifyPriceLabelFont != null) modifyPriceLabel.setFont(modifyPriceLabelFont);
        modifyPriceLabel.setText("Modify Price");
        ModifyPricePanel.add(modifyPriceLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        ModifyDetailPanel = new JPanel();
        ModifyDetailPanel.setLayout(new GridLayoutManager(8, 3, new Insets(0, 0, 0, 0), -1, -1));
        ModifyDetailPanel.setBackground(new Color(-721665));
        ModifyPricePanel.add(ModifyDetailPanel, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        ModifyDetailPanel.add(spacer1, new GridConstraints(6, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        nameLabel = new JLabel();
        Font nameLabelFont = this.$$$getFont$$$(null, -1, 24, nameLabel.getFont());
        if (nameLabelFont != null) nameLabel.setFont(nameLabelFont);
        nameLabel.setText("Name");
        ModifyDetailPanel.add(nameLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        priceLabel = new JLabel();
        Font priceLabelFont = this.$$$getFont$$$(null, -1, 24, priceLabel.getFont());
        if (priceLabelFont != null) priceLabel.setFont(priceLabelFont);
        priceLabel.setText("Price");
        ModifyDetailPanel.add(priceLabel, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        operationLabel = new JLabel();
        Font operationLabelFont = this.$$$getFont$$$(null, -1, 24, operationLabel.getFont());
        if (operationLabelFont != null) operationLabel.setFont(operationLabelFont);
        operationLabel.setText("Operation");
        ModifyDetailPanel.add(operationLabel, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        fixedRamenLabel = new JLabel();
        Font fixedRamenLabelFont = this.$$$getFont$$$(null, -1, 20, fixedRamenLabel.getFont());
        if (fixedRamenLabelFont != null) fixedRamenLabel.setFont(fixedRamenLabelFont);
        fixedRamenLabel.setText("Fixed Ramen");
        ModifyDetailPanel.add(fixedRamenLabel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        modifyButton = new JButton();
        Font modifyButtonFont = this.$$$getFont$$$(null, -1, 20, modifyButton.getFont());
        if (modifyButtonFont != null) modifyButton.setFont(modifyButtonFont);
        modifyButton.setText("Modify");
        ModifyDetailPanel.add(modifyButton, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        modifyButton1 = new JButton();
        Font modifyButton1Font = this.$$$getFont$$$(null, -1, 20, modifyButton1.getFont());
        if (modifyButton1Font != null) modifyButton1.setFont(modifyButton1Font);
        modifyButton1.setText("Modify");
        ModifyDetailPanel.add(modifyButton1, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        modifyButton2 = new JButton();
        Font modifyButton2Font = this.$$$getFont$$$(null, -1, 20, modifyButton2.getFont());
        if (modifyButton2Font != null) modifyButton2.setFont(modifyButton2Font);
        modifyButton2.setText("Modify");
        ModifyDetailPanel.add(modifyButton2, new GridConstraints(3, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        modifyButton3 = new JButton();
        Font modifyButton3Font = this.$$$getFont$$$(null, -1, 20, modifyButton3.getFont());
        if (modifyButton3Font != null) modifyButton3.setFont(modifyButton3Font);
        modifyButton3.setText("Modify");
        ModifyDetailPanel.add(modifyButton3, new GridConstraints(4, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        modifyButton4 = new JButton();
        Font modifyButton4Font = this.$$$getFont$$$(null, -1, 20, modifyButton4.getFont());
        if (modifyButton4Font != null) modifyButton4.setFont(modifyButton4Font);
        modifyButton4.setText("Modify");
        ModifyDetailPanel.add(modifyButton4, new GridConstraints(5, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        extraNoriLabel = new JLabel();
        Font extraNoriLabelFont = this.$$$getFont$$$(null, -1, 20, extraNoriLabel.getFont());
        if (extraNoriLabelFont != null) extraNoriLabel.setFont(extraNoriLabelFont);
        extraNoriLabel.setText("Extra Nori");
        ModifyDetailPanel.add(extraNoriLabel, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        extraBoiledEggLabel = new JLabel();
        Font extraBoiledEggLabelFont = this.$$$getFont$$$(null, -1, 20, extraBoiledEggLabel.getFont());
        if (extraBoiledEggLabelFont != null) extraBoiledEggLabel.setFont(extraBoiledEggLabelFont);
        extraBoiledEggLabel.setText("Extra Boiled Egg");
        ModifyDetailPanel.add(extraBoiledEggLabel, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        bambooShootsLabel = new JLabel();
        Font bambooShootsLabelFont = this.$$$getFont$$$(null, -1, 20, bambooShootsLabel.getFont());
        if (bambooShootsLabelFont != null) bambooShootsLabel.setFont(bambooShootsLabelFont);
        bambooShootsLabel.setText("Bamboo Shoots");
        ModifyDetailPanel.add(bambooShootsLabel, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        extraChashuLabel = new JLabel();
        Font extraChashuLabelFont = this.$$$getFont$$$(null, -1, 20, extraChashuLabel.getFont());
        if (extraChashuLabelFont != null) extraChashuLabel.setFont(extraChashuLabelFont);
        extraChashuLabel.setText("Extra Chashu");
        ModifyDetailPanel.add(extraChashuLabel, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        backButton = new JButton();
        Font backButtonFont = this.$$$getFont$$$(null, -1, 20, backButton.getFont());
        if (backButtonFont != null) backButton.setFont(backButtonFont);
        backButton.setText("Back");
        ModifyDetailPanel.add(backButton, new GridConstraints(7, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        RamenPrice = new JLabel();
        Font RamenPriceFont = this.$$$getFont$$$(null, -1, 20, RamenPrice.getFont());
        if (RamenPriceFont != null) RamenPrice.setFont(RamenPriceFont);
        RamenPrice.setText("$$$");
        ModifyDetailPanel.add(RamenPrice, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        NoriPrice = new JLabel();
        Font NoriPriceFont = this.$$$getFont$$$(null, -1, 20, NoriPrice.getFont());
        if (NoriPriceFont != null) NoriPrice.setFont(NoriPriceFont);
        NoriPrice.setText("$$$");
        ModifyDetailPanel.add(NoriPrice, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        EggPrice = new JLabel();
        Font EggPriceFont = this.$$$getFont$$$(null, -1, 20, EggPrice.getFont());
        if (EggPriceFont != null) EggPrice.setFont(EggPriceFont);
        EggPrice.setText("$$$");
        ModifyDetailPanel.add(EggPrice, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        BambooPrice = new JLabel();
        Font BambooPriceFont = this.$$$getFont$$$(null, -1, 20, BambooPrice.getFont());
        if (BambooPriceFont != null) BambooPrice.setFont(BambooPriceFont);
        BambooPrice.setText("$$$");
        ModifyDetailPanel.add(BambooPrice, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        ChashuPrice = new JLabel();
        Font ChashuPriceFont = this.$$$getFont$$$(null, -1, 20, ChashuPrice.getFont());
        if (ChashuPriceFont != null) ChashuPrice.setFont(ChashuPriceFont);
        ChashuPrice.setText("$$$");
        ModifyDetailPanel.add(ChashuPrice, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        ModifyPricePanel.add(spacer2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return ModifyPricePanel;
    }

    public static void main(String[] args) {
        /*JFrame frame = new JFrame("ModifyPrice");
        frame.setContentPane(new ModifyPrice().ModifyPricePanel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(600, 500);
        frame.setPreferredSize(new Dimension(600, 500));
        frame.setLocationRelativeTo(null);
        frame.pack();
        frame.setVisible(true);*/
        ModifyPrice modifyPrice = new ModifyPrice();
    }
}
